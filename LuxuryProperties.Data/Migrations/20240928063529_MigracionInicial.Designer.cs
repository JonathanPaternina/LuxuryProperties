// <auto-generated />
using System;
using LuxuryProperties.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LuxuryProperties.Data.Migrations
{
    [DbContext(typeof(LuxuryPropertyContext))]
    [Migration("20240928063529_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LuxuryProperties.Shared.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("LuxuryProperties.Shared.Property", b =>
                {
                    b.Property<int>("IdProperty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProperty"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodeInternal")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("IdProperty");

                    b.HasIndex("OwnerId");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("LuxuryProperties.Shared.PropertyImage", b =>
                {
                    b.Property<int>("PropertyImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyImageId"));

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("IdProperty")
                        .HasColumnType("int");

                    b.Property<int?>("PropertyIdProperty")
                        .HasColumnType("int");

                    b.HasKey("PropertyImageId");

                    b.HasIndex("PropertyIdProperty");

                    b.ToTable("PropertyImage");
                });

            modelBuilder.Entity("LuxuryProperties.Shared.PropertyTrace", b =>
                {
                    b.Property<int>("PropertyTraceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyTraceId"));

                    b.Property<DateTime>("DateSale")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProperty")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyIdProperty")
                        .HasColumnType("int");

                    b.Property<float>("Tax")
                        .HasColumnType("real");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("PropertyTraceId");

                    b.HasIndex("PropertyIdProperty");

                    b.ToTable("PropertyTrace");
                });

            modelBuilder.Entity("LuxuryProperties.Shared.Property", b =>
                {
                    b.HasOne("LuxuryProperties.Shared.Owner", null)
                        .WithMany("Property")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LuxuryProperties.Shared.PropertyImage", b =>
                {
                    b.HasOne("LuxuryProperties.Shared.Property", null)
                        .WithMany("PropertyImage")
                        .HasForeignKey("PropertyIdProperty");
                });

            modelBuilder.Entity("LuxuryProperties.Shared.PropertyTrace", b =>
                {
                    b.HasOne("LuxuryProperties.Shared.Property", null)
                        .WithMany("PropertyTrace")
                        .HasForeignKey("PropertyIdProperty");
                });

            modelBuilder.Entity("LuxuryProperties.Shared.Owner", b =>
                {
                    b.Navigation("Property");
                });

            modelBuilder.Entity("LuxuryProperties.Shared.Property", b =>
                {
                    b.Navigation("PropertyImage");

                    b.Navigation("PropertyTrace");
                });
#pragma warning restore 612, 618
        }
    }
}
